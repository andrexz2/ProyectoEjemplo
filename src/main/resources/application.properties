# propiedades a modificar para desplegar en AWS
# Ajustar en funci�n del nombre del proyecto y como deba
# publicarse en AWS
server.port=8080
server.servlet.context-path=/arquetipo
management.endpoints.web.base-path=/

# Datasource principal R/W. Si se va a usar el modo de replicas
# se configurar� otro DS en modo Read Only
spring.datasource.url=jdbc:postgresql://localhost:5432/ventas
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.initialization-mode= always
spring.entitymanager.packages-to-scan= es.correos.soporte.minerva.proyectoejemplo.domain, es.correos.soporte.minerva.proyectoejemplo.repository

# Datasource para los repositorios de solo lectura. En este caso
# apuntan a la misma BBDD que el de R/W pero en un entorno donde
# se tenga el acceso a la r�plica, se debe configurar adecuadamente.
spring.read.datasource.url=jdbc:postgresql://localhost:5432/ventas
spring.read.datasource.username=postgres
spring.read.datasource.password=postgres
spring.read.datasource.driver-class-name=org.postgresql.Driver
spring.read.datasource.initialization-mode= always
spring.read.entitymanager.packages-to-scan= ${spring.entitymanager.packages-to-scan}

#propiedad de spring
spring.application.name=@project.name@
#propiedades de la aplicacion
application.uuaa=@project.name@
application.version=@project.version@


spring.data.web.pageable.default-page-size=20
spring.data.web.pageable.max-page-size=100

#propiedades para la conexi�n RW
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# propiedades para la conexi�n ReadOnly. Solo son necesarias las que tienen que
# ver con hibernate
spring.read.jpa.properties.hibernate.format_sql=true
spring.read.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
# esta propiedad solo debe ponerse a none|validate, o no ponerse y por
# defecto ser� un none.
spring.read.jpa.hibernate.ddl-auto=validate
spring.read.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

#Auditoria
# app
application.audit.enabled=false
application.audit.queue-name=queueAuditoriaCorreos
application.audit.app-code=${spring.application.name}
application.audit.app-name=${spring.application.name}
application.audit.app-comment=COMENTARIOS ${spring.application.name}
#IBM_MQ
application.audit.jms-provider=IBM_MQ

# Si se ha seleccionado IMB_MQ, algunas configuraciones que se pueden hacer (debe estar 
# presente la dependencia en el pom para ibm)
ibm.mq.queueManager=QM1
ibm.mq.channel=DEV.ADMIN.SVRCONN
ibm.mq.connName=localhost(1414)
ibm.mq.user=admin
ibm.mq.password=passw0rd

# CORS
# por defecto el filtro cors está activo, pero se pone la propiedad para que se vea
# que existe
application.cors.enabled=true
#esto sería un ejemplo donde se afina por metodo/path. Se tiene que poner de mas restrictivo a menos
#porque sino, si el primero fuese el path *, eso aplicaría a todo.
application.cors.mappings[0].path=/api/user/1
application.cors.mappings[0].allowed-origins=http://localhost,http://127.0.0.1
application.cors.mappings[0].allowed-methods=GET
application.cors.mappings[0].allowed-headers=Content-Type, Access-Control-Request-Headers,Access-Control-Request-Method, Accept, Origin, Authorization,X-Requested-With, Content-Disposition
#application.cors.mappings[0].exposedHeaders=Content-Type, Access-Control-Request-Headers,Access-Control-Request-Method, Accept, Origin, Authorization,X-Requested-With, Content-Disposition
application.cors.mappings[0].allow-credentials=false
application.cors.mappings[0].max-age=3600

application.cors.mappings[1].path=/api/user/2
application.cors.mappings[1].allowed-origins=*
application.cors.mappings[1].allowed-methods=GET
application.cors.mappings[1].allowed-headers=Content-Type, Access-Control-Request-Headers,Access-Control-Request-Method, Accept, Origin, Authorization,X-Requested-With, Content-Disposition
#application.cors.mappings[1].exposedHeaders=Content-Type, Access-Control-Request-Headers,Access-Control-Request-Method, Accept, Origin, Authorization,X-Requested-With, Content-Disposition
application.cors.mappings[1].allow-credentials=false
application.cors.mappings[1].max-age=3600

application.cors.mappings[2].path=/api/user/**
application.cors.mappings[2].allowed-origins=*
application.cors.mappings[2].allowed-methods=GET
application.cors.mappings[2].allowed-headers=Content-Type, Access-Control-Request-Headers,Access-Control-Request-Method, Accept, Origin, Authorization,X-Requested-With, Content-Disposition
#application.cors.mappings[2].exposedHeaders=Content-Type, Access-Control-Request-Headers,Access-Control-Request-Method, Accept, Origin, Authorization,X-Requested-With, Content-Disposition
application.cors.mappings[2].allow-credentials=false
application.cors.mappings[2].max-age=3600

application.cors.mappings[3].path=/**
application.cors.mappings[3].allowed-origins=*
application.cors.mappings[3].allowed-methods=POST, GET, PUT, OPTIONS, DELETE
application.cors.mappings[3].allowed-headers=Content-Type, Access-Control-Request-Headers,Access-Control-Request-Method, Accept, Origin, Authorization,X-Requested-With, Content-Disposition
#application.cors.mappings[3].exposedHeaders=Content-Type, Access-Control-Request-Headers,Access-Control-Request-Method, Accept, Origin, Authorization,X-Requested-With, Content-Disposition
application.cors.mappings[3].allow-credentials=false
application.cors.mappings[3].max-age=3600

es.correos.jwt-validation-enabled=false
es.correos.public-key=-----BEGIN PUBLIC KEY-----\n\
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAgGzGPQ8Yzy11f2TaXMax\n\
IMTea6kM+0fMBcCk2ZPUDGJ0Wo9/b4PZ5CFL+0Bd4gCWBymzwKR3yt3xhy0puDQd\n\
1UAgkULmxDF7FkIUm+LWxYzjfeqcPQW8YZ00iTfiocUW2ylftWjEvftRtw2Y1Cox\n\
btHOPZNql1BB7NObig9siyj0tF48hyS/GlvMc/wrGAbBWYTNA0lUazF++OWit3Fu\n\
2m6yKFfOcudOOc3smZ3z+bhW17+YVPbo9Cfkct0oQKfwQ7NPmGoKShJRoi04/9dz\n\
OD4voTuc5baF3yPjheDJOan9k9taOnb51Mh8sRIbVannkh1KzjuI/8WvE5qgpUlG\n\
0wIDAQAB\n\
-----END PUBLIC KEY-----

feign.client.custom.default.interceptors.oauth2-interceptor-enabled=false

# permite activar un aspecto para trazar los m�todos de spring-data-jpa
# para indicar si usan ReadOnly o ReadWrite. Esto en producci�n
# aunque no afecte mucho al rendimiento mejor desactivar. En desarrollo
# activar para controlar que todo aquello que se quiere ejecutar
# en solo lectura, realmente se ejecuta as�.
es.correos.read.replicas.tracer.enabled=false
